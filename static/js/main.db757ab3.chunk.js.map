{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","props","user","name","email","className","TodoInfo","todoItem","title","completed","TodoList","todos","map","todo","classNames","id","users","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","userId","find","App","state","isFormVisible","todoTitle","todoUserId","todoTitleError","notChoosedUserError","successMessage","showForm","setState","resetForm","clearSuccessMessage","handleSubmit","trim","match","getMaxId","max","forEach","this","onSubmit","event","preventDefault","htmlFor","type","value","onChange","target","Number","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db757ab3.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = (props) => {\n  const { user } = props;\n  const { name, email } = user;\n\n  return (\n    <div className=\"badge badge-primary\">\n      {`Responsible: ${name}. Email: ${email}`}\n    </div>\n  );\n};\n","import React from 'react';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todoItem: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = (props) => {\n  const { todoItem } = props;\n  const { title, completed, user } = todoItem;\n\n  return (\n    <>\n      <span>\n        {`Task: ${title}. `}\n      </span>\n      {user && (\n        <UserInfo user={user} />\n      )}\n      {completed && (\n        <span className=\"float-right\">\n          Done\n        </span>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <div className=\"list-group\">\n      {todos.map(todo => (\n        <div\n          className={classNames(\n            {\n              'list-group-item': true,\n              'list-group-item-action': true,\n              'list-group-item-success': todo.completed,\n              'list-group-item-warning': !todo.completed,\n            },\n          )}\n          key={todo.id}\n        >\n          <TodoInfo todoItem={todo} />\n        </div>\n      ))}\n    </div>\n  );\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport { TodoList } from './components/TodoList';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\ntype State = {\n  todos: Todo[];\n  isFormVisible: boolean;\n  todoTitle: string;\n  todoUserId: number;\n  todoTitleError: string;\n  notChoosedUserError: string;\n  successMessage: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: preparedTodos,\n    isFormVisible: false,\n    todoTitle: '',\n    todoUserId: 0,\n    todoTitleError: '',\n    notChoosedUserError: '',\n    successMessage: '',\n  };\n\n  showForm = () => {\n    this.setState({ isFormVisible: true });\n  };\n\n  resetForm = () => {\n    this.setState({\n      isFormVisible: false,\n      todoTitle: '',\n      todoUserId: 0,\n      successMessage: 'Task was added',\n    });\n  };\n\n  clearSuccessMessage = () => {\n    this.setState({ successMessage: '' });\n  };\n\n  handleSubmit = () => {\n    const { todoTitle, todoUserId } = this.state;\n\n    if (todoTitle.trim() === '') {\n      this.setState({ todoTitleError: 'Please enter the title' });\n\n      return;\n    }\n\n    if (!todoTitle.match(/^[a-zA-Zа-яА-Я0-9 ]+$/)) {\n      this.setState({\n        todoTitleError: 'Invalid characters: letters (ru and en), digits and spaces are available',\n      });\n\n      return;\n    }\n\n    if (todoUserId === 0) {\n      this.setState({ notChoosedUserError: 'Please choose a user' });\n\n      return;\n    }\n\n    this.setState((state) => ({\n      todos: [\n        ...state.todos,\n        {\n          userId: state.todoUserId,\n          id: this.getMaxId() + 1,\n          title: state.todoTitle,\n          completed: false,\n          user: users.find(user => user.id === state.todoUserId),\n        },\n      ],\n    }));\n    this.resetForm();\n  };\n\n  getMaxId = () => {\n    const { todos } = this.state;\n    let max = todos[0].id;\n\n    todos.forEach(todo => {\n      if (todo.id > max) {\n        max = todo.id;\n      }\n    });\n\n    return max;\n  };\n\n  render() {\n    const {\n      todos,\n      isFormVisible,\n      todoTitle,\n      todoUserId,\n      todoTitleError,\n      notChoosedUserError,\n      successMessage,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          <h1 className=\"text-center\">List of todos</h1>\n\n          {isFormVisible\n            ? (\n              <form onSubmit={(event) => {\n                event.preventDefault();\n                this.handleSubmit();\n              }}\n              >\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">\n                    <span>Title</span>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"title\"\n                      name=\"title\"\n                      value={todoTitle}\n                      onChange={(event) => {\n                        this.setState({\n                          todoTitle: event.target.value,\n                          todoTitleError: '',\n                        });\n                      }}\n                    />\n                  </label>\n\n                  {todoTitleError && (\n                    <p className=\"alert-danger\">\n                      {todoTitleError}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-select\"\n                    name=\"userId\"\n                    value={todoUserId}\n                    onChange={(event) => {\n                      this.setState({\n                        todoUserId: Number(event.target.value),\n                        notChoosedUserError: '',\n                      });\n                    }}\n                  >\n                    <option value={0}>\n                      Choose a user\n                    </option>\n                    {users.map(user => (\n                      <option value={user.id} key={user.id}>\n                        {user.name}\n                      </option>\n                    ))}\n                  </select>\n\n                  {notChoosedUserError && (\n                    <p className=\"alert-danger\">\n                      {notChoosedUserError}\n                    </p>\n                  )}\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-outline-primary\"\n                >\n                  Add todo\n                </button>\n              </form>\n            )\n            : (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary\"\n                onClick={this.showForm}\n              >\n                Add todo\n              </button>\n            )}\n\n          {successMessage && (\n            <p className=\"alert alert-success text-center\">\n              {successMessage}\n              <button\n                type=\"button\"\n                className=\"close\"\n                onClick={this.clearSuccessMessage}\n              >\n                &times;\n              </button>\n            </p>\n          )}\n        </div>\n\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}